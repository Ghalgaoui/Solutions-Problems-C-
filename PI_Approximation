//============================================================================
// Name        : PI.cpp
// Author      : kamel
// Email	   : kamelghalgaoui7@gmail.com
// Version     :
// Copyright   : Your copyright notice
// Description : PI Approximation in C++, Ansi-style
//============================================================================

#include <iostream>
#include <vector>
#include <iterator>
#include <math.h>

#include <cstdlib>

using namespace std;

#define MAX_PTS 1000000

typedef struct{
	double x;
	double y;
}Point;

class Pi{
public:
	static double approx(vector<Point> &pts){
		int insides = 0;
		for(int i = 0; i < pts.size(); i++){
			if(pow(pts[i].x, 2)+ pow(pts[i].y, 2) < 1)
				insides++;
		}
		return 4*double(insides)/double(MAX_PTS);

	}
};
int main() {
	vector<Point> rands;
	for(int i= 0; i < MAX_PTS; i++){
		Point p;
		p.x = rand() / (double)RAND_MAX;
		p.y = rand() / (double)RAND_MAX;
		rands.push_back(p);
	}
	cout << Pi::approx(rands);
	return 0;
}

